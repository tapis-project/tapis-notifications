/*
 * This file is generated by jOOQ.
 */
package edu.utexas.tacc.tapis.notifications.gen.jooq.tables.records;


import edu.utexas.tacc.tapis.notifications.gen.jooq.tables.Subscriptions;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SubscriptionsRecord extends UpdatableRecordImpl<SubscriptionsRecord> implements Record9<Integer, String, String, String, Boolean, String, String, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>tapis_notif.subscriptions.seq_id</code>. Subscription sequence id
     */
    public void setSeqId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>tapis_notif.subscriptions.seq_id</code>. Subscription sequence id
     */
    public Integer getSeqId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>tapis_notif.subscriptions.tenant</code>. Tenant name associated with the subscription
     */
    public void setTenant(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>tapis_notif.subscriptions.tenant</code>. Tenant name associated with the subscription
     */
    public String getTenant() {
        return (String) get(1);
    }

    /**
     * Setter for <code>tapis_notif.subscriptions.id</code>. Unique name for the subscription
     */
    public void setId(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>tapis_notif.subscriptions.id</code>. Unique name for the subscription
     */
    public String getId() {
        return (String) get(2);
    }

    /**
     * Setter for <code>tapis_notif.subscriptions.owner</code>. User name of owner
     */
    public void setOwner(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>tapis_notif.subscriptions.owner</code>. User name of owner
     */
    public String getOwner() {
        return (String) get(3);
    }

    /**
     * Setter for <code>tapis_notif.subscriptions.enabled</code>. Indicates if subscription is currently active and available for use
     */
    public void setEnabled(Boolean value) {
        set(4, value);
    }

    /**
     * Getter for <code>tapis_notif.subscriptions.enabled</code>. Indicates if subscription is currently active and available for use
     */
    public Boolean getEnabled() {
        return (Boolean) get(4);
    }

    /**
     * Setter for <code>tapis_notif.subscriptions.topic_filter</code>.
     */
    public void setTopicFilter(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>tapis_notif.subscriptions.topic_filter</code>.
     */
    public String getTopicFilter() {
        return (String) get(5);
    }

    /**
     * Setter for <code>tapis_notif.subscriptions.subject_filter</code>.
     */
    public void setSubjectFilter(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>tapis_notif.subscriptions.subject_filter</code>.
     */
    public String getSubjectFilter() {
        return (String) get(6);
    }

    /**
     * Setter for <code>tapis_notif.subscriptions.created</code>. UTC time for when record was created
     */
    public void setCreated(LocalDateTime value) {
        set(7, value);
    }

    /**
     * Getter for <code>tapis_notif.subscriptions.created</code>. UTC time for when record was created
     */
    public LocalDateTime getCreated() {
        return (LocalDateTime) get(7);
    }

    /**
     * Setter for <code>tapis_notif.subscriptions.updated</code>. UTC time for when record was last updated
     */
    public void setUpdated(LocalDateTime value) {
        set(8, value);
    }

    /**
     * Getter for <code>tapis_notif.subscriptions.updated</code>. UTC time for when record was last updated
     */
    public LocalDateTime getUpdated() {
        return (LocalDateTime) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row9<Integer, String, String, String, Boolean, String, String, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    @Override
    public Row9<Integer, String, String, String, Boolean, String, String, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row9) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Subscriptions.SUBSCRIPTIONS.SEQ_ID;
    }

    @Override
    public Field<String> field2() {
        return Subscriptions.SUBSCRIPTIONS.TENANT;
    }

    @Override
    public Field<String> field3() {
        return Subscriptions.SUBSCRIPTIONS.ID;
    }

    @Override
    public Field<String> field4() {
        return Subscriptions.SUBSCRIPTIONS.OWNER;
    }

    @Override
    public Field<Boolean> field5() {
        return Subscriptions.SUBSCRIPTIONS.ENABLED;
    }

    @Override
    public Field<String> field6() {
        return Subscriptions.SUBSCRIPTIONS.TOPIC_FILTER;
    }

    @Override
    public Field<String> field7() {
        return Subscriptions.SUBSCRIPTIONS.SUBJECT_FILTER;
    }

    @Override
    public Field<LocalDateTime> field8() {
        return Subscriptions.SUBSCRIPTIONS.CREATED;
    }

    @Override
    public Field<LocalDateTime> field9() {
        return Subscriptions.SUBSCRIPTIONS.UPDATED;
    }

    @Override
    public Integer component1() {
        return getSeqId();
    }

    @Override
    public String component2() {
        return getTenant();
    }

    @Override
    public String component3() {
        return getId();
    }

    @Override
    public String component4() {
        return getOwner();
    }

    @Override
    public Boolean component5() {
        return getEnabled();
    }

    @Override
    public String component6() {
        return getTopicFilter();
    }

    @Override
    public String component7() {
        return getSubjectFilter();
    }

    @Override
    public LocalDateTime component8() {
        return getCreated();
    }

    @Override
    public LocalDateTime component9() {
        return getUpdated();
    }

    @Override
    public Integer value1() {
        return getSeqId();
    }

    @Override
    public String value2() {
        return getTenant();
    }

    @Override
    public String value3() {
        return getId();
    }

    @Override
    public String value4() {
        return getOwner();
    }

    @Override
    public Boolean value5() {
        return getEnabled();
    }

    @Override
    public String value6() {
        return getTopicFilter();
    }

    @Override
    public String value7() {
        return getSubjectFilter();
    }

    @Override
    public LocalDateTime value8() {
        return getCreated();
    }

    @Override
    public LocalDateTime value9() {
        return getUpdated();
    }

    @Override
    public SubscriptionsRecord value1(Integer value) {
        setSeqId(value);
        return this;
    }

    @Override
    public SubscriptionsRecord value2(String value) {
        setTenant(value);
        return this;
    }

    @Override
    public SubscriptionsRecord value3(String value) {
        setId(value);
        return this;
    }

    @Override
    public SubscriptionsRecord value4(String value) {
        setOwner(value);
        return this;
    }

    @Override
    public SubscriptionsRecord value5(Boolean value) {
        setEnabled(value);
        return this;
    }

    @Override
    public SubscriptionsRecord value6(String value) {
        setTopicFilter(value);
        return this;
    }

    @Override
    public SubscriptionsRecord value7(String value) {
        setSubjectFilter(value);
        return this;
    }

    @Override
    public SubscriptionsRecord value8(LocalDateTime value) {
        setCreated(value);
        return this;
    }

    @Override
    public SubscriptionsRecord value9(LocalDateTime value) {
        setUpdated(value);
        return this;
    }

    @Override
    public SubscriptionsRecord values(Integer value1, String value2, String value3, String value4, Boolean value5, String value6, String value7, LocalDateTime value8, LocalDateTime value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SubscriptionsRecord
     */
    public SubscriptionsRecord() {
        super(Subscriptions.SUBSCRIPTIONS);
    }

    /**
     * Create a detached, initialised SubscriptionsRecord
     */
    public SubscriptionsRecord(Integer seqId, String tenant, String id, String owner, Boolean enabled, String topicFilter, String subjectFilter, LocalDateTime created, LocalDateTime updated) {
        super(Subscriptions.SUBSCRIPTIONS);

        setSeqId(seqId);
        setTenant(tenant);
        setId(id);
        setOwner(owner);
        setEnabled(enabled);
        setTopicFilter(topicFilter);
        setSubjectFilter(subjectFilter);
        setCreated(created);
        setUpdated(updated);
    }
}
